#PARAMETERS
#region Login
    $TenantID          = "YOUR-TENANT-ID"
    $SubscriptionID    = "YOUR-Subscription-ID"
    $appID             = "YOUR-ServicePrincipal-ClientID"
    $password          = "YOUR-ServicePrincipal-CLIENTSECRET"
    $location          = "eastus"
    $rgName            = "aibx-ml-rg"
    $DeploymentName    = "AI-in-a-Box-ML"
    $BicepFile         = "main.bicep"
    $parameterFile     = "main.parameters.json" 
#endregion

#First - Make sure you already have a Service Principal Created and gather the SP's Application ID, Client Secret and Tenant ID.
#https://learn.microsoft.com/en-us/cli/azure/ad/sp?view=azure-cli-latest#az-ad-sp-create-for-rbac

#Login with Service Principal - Make sure you login and run deployment with a user that has a high enough RBAC to create role assignments (Owner Role). 
az login --service-principal --username $appID --password $password --tenant $TenantID 

#Set the default subscription for all of the Azure CLI commands that you run in this session
az account set --subscription $SubscriptionID

#Create your Resource Group where you are going to land all your ML Workspace Resources and Dependencies
az group create --name $rgName --location $location

#Create a service principal in Azure that will have contributor access to that resource group where you will deploy the ML Workspace and other resources. 
#Do this step in the Azure Cloud Shell.
#You will use this service principal to automate the deployment in GitHub Actions.
#Make sure to copy the service principal's output over to GitHub, your repo will have Contributor access to the resource group in Azure.
az ad sp create-for-rbac --name SPName --role contributor --scopes /subscriptions/<subscription-id>/resourceGroups/aibx-ml-rg
az ad sp create-for-rbac --name ap-aibx-sp --role contributor --scopes /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/aibx-ml-rg

#Build and convert your Bicep file to an Azure Resource Manager template (ARM template)
#(Make sure that you run the below command within the \1-ml-in-a-box\infra directory. So change directory (cd) at the command prompt)
az bicep build --file $BicepFile
az bicep build-params --file $parameterFile

#Preview the changes that will happen. Azure Resource Manager provides the what-if operation to let you see how resources will change if you deploy the template.
az deployment group what-if --location $location --template-file $BicepFile --parameters $parameterFile --verbose

#Deploy the Bicep template to Azure
az deployment group create --resource-group $rgName --template-file $BicepFile --parameters $parameterFile --verbose

#Clean Up the Resources and Delete the Resource Group
#az group delete --name $rgName --yes
#az keyvault purge --name yourkeyvault

# Decompile ARM template
#az bicep decompile --file template.json

